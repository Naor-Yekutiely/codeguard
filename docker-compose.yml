version: '3.7'

services:    
  backend1:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend1
    ports:
      - "5000:5000"
  backend2:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend2
    ports:
      - "5001:5000"
  backend3:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend3
    ports:
      - "5002:5000"
  backend4:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend4
    ports:
      - "5003:5000"
   
  
  haproxy:
    build: 
      context: ./src/infra/
      dockerfile: haproxy.Dockerfile
    ports:
       - '80:80'
       - '8404:8404'   
    depends_on:
      - backend1
      - backend2
      - backend3
      - backend4
      
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: codegard
    volumes:
      - ./mongo-data:/data/db
      # - ./src/mongoDB/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js ### -- !!!for initial data!!!!
  # volumes:
#   - ./mongo-data:/ 
    ports:
      - '27017:27017'
    depends_on:
      - haproxy
      




