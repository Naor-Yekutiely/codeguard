version: '3.7'

services:    
  backend1:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend1
    ports:
      - "5001:5000"
  backend2:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend2
    ports:
      - "5002:5000"
  backend3:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend3
    ports:
      - "5003:5000"
  backend4:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend4
    ports:
      - "5004:5000"
   
  
  haproxy:
    hostname: haproxy
    container_name: haproxy
    build: 
      context: ./src/infra/
      dockerfile: haproxy.Dockerfile
    ports:
       - '80:80'
       - '8404:8404'   
    depends_on:
      - backend1
      - backend2
      - backend3
      - backend4

############################################################

## Mongo Configruration

# Cfg Server:
# mongo_cfgserv: 27015

# Router Server:
# mongo_route: 27017

# Sharding Cluster:
# rs0/mongodb1:27016,mongodb1:27018,mongodb1:27019

# initialize cfg serve [mongosh]:
# rs.initiate ({ _id: "cfgrs", configsvr: true, members: [ {_id : 0, host : "mongo_cfgserv:27017" }] })
# rs.status()
# sharding replica [mongosh]:
# rs.initiate( { _id: "rs0", members: [ { _id : 0, host : "mongodb1:27017" }, { _id : 1, host : "mongodb2:27017" }, { _id : 2, host : "mongodb3:27017" } ] } )
# rs.status()
# initialize mongos server with sharding:
# sh.addShard("rs0/mongodb1:27017,mongodb2:27017,mongodb3:27017")
# sh.status()
############################################################

  mongo_cfgserv:
    hostname: mongo_cfgserv
    container_name: mongo_cfgserv
    build:
      context: .
      dockerfile: ./src/infra/mongo.Dockerfile
    command: mongod --configsvr --replSet cfgrs --bind_ip 0.0.0.0 --port 27017 --dbpath /data/db
    ports:
      - 27015:27017
    volumes:
      - cfgsvr:/data/db


  mongos:
    hostname: mongos
    container_name: mongos
    build:
      context: .
      dockerfile: ./src/infra/mongo.Dockerfile
    ports:
      - 27017:27017
    command: mongos --configdb cfgrs/mongo_cfgserv:27017 --bind_ip 0.0.0.0 --port 27017
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3
      - mongo_cfgserv

  mongodb1:
    build:
      context: .
      dockerfile: ./src/infra/mongo.Dockerfile
    container_name: mongodb1
    hostname: mongodb1
    environment:
      MONGO_INITDB_DATABASE: codegard
    ports:
      - "27016:27017"
    volumes:
      - mongodb1:/data/db
    command: mongod --shardsvr --bind_ip 0.0.0.0 --port 27017 --replSet rs0 --dbpath /data/db
    depends_on:
      - mongodb2
      - mongodb3



  mongodb2:
    image: mongo
    container_name: mongodb2
    hostname: mongodb2
    environment:
      MONGO_INITDB_DATABASE: codegard
    ports:
      - "27018:27017"
    volumes:
      - mongodb2:/data/db
    command: mongod --shardsvr --bind_ip 0.0.0.0 --port 27017 --replSet rs0  --dbpath /data/db
 

  mongodb3:
    image: mongo
    container_name: mongodb3
    hostname: mongodb3
    environment:
      MONGO_INITDB_DATABASE: codegard
    ports:
      - "27019:27017"
    volumes:
      - mongodb3:/data/db
    command:  mongod --shardsvr --bind_ip 0.0.0.0 --port 27017 --replSet rs0 --dbpath /data/db
  

volumes:
  cfgsvr: {}
  mongodb1: {}
  mongodb2: {}
  mongodb3: {}
