version: '3.7'

services:    
  backend1:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend1
    ports:
      - "5001:5000"
  backend2:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend2
    ports:
      - "5002:5000"
  backend3:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend3
    ports:
      - "5003:5000"
  backend4:
    build:
      context: .
      dockerfile: ./src/infra/backend.Dockerfile
    container_name: backend4
    ports:
      - "5004:5000"
   
  
  haproxy:
    hostname: haproxy
    container_name: haproxy
    build: 
      context: ./src/infra/
      dockerfile: haproxy.Dockerfile
    ports:
       - '80:80'
       - '8404:8404'   
    depends_on:
      - backend1
      - backend2
      - backend3
      - backend4

  mongo_cfgserv:
    build:
      context: .
      dockerfile: ./src/infra/mongocfg.Dockerfile
    hostname: mongo_cfgserv
    container_name: mongo_cfgserv
    command: mongod --configsvr --replSet cfgrs --bind_ip 0.0.0.0 --port 27017 --dbpath /data/db
    environment:
      MONGO_INITDB_DATABASE: codegard
    ports:
      - 27015:27017
    volumes:
      - cfgsvr:/data/db
      - ./src/mongoDB/mongo-data/mongo-config:/data/db
      - ./src/mongoDB/mongo_config.js:/docker-entrypoint-initdb.d/mongo_config.js

  mongos:
    build:
      context: .
      dockerfile: ./src/infra/mongos.Dockerfile
    hostname: mongos
    container_name: mongos
    ports:
      - 27017:27017
    volumes:
      - ./src/mongoDB/mongo-data/mongos:/data/db
      - ./src/mongoDB/mongos.js:/docker-entrypoint-initdb.d/mongos.js
    command: mongos --configdb cfgrs/mongo_cfgserv:27017 --bind_ip 0.0.0.0 --port 27017
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3
      - mongo_cfgserv


  mongodb1:
    build:
      context: .
      dockerfile: ./src/infra/mongo.Dockerfile
    container_name: mongodb1
    hostname: mongodb1
    command: mongod --shardsvr --bind_ip 0.0.0.0 --port 27017 --replSet rs0 --dbpath /data/db
    environment:
      MONGO_INITDB_DATABASE: codegard
    ports:
      - "27016:27017"
    volumes:
      - mongodb1:/data/db
      - ./src/mongoDB/mongo-data/mongodb1:/data/db
      - ./src/mongoDB/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    depends_on:
      - mongodb2
      - mongodb3
      - mongo_cfgserv

    
          
  mongodb2:
    image: mongo
    container_name: mongodb2
    hostname: mongodb2
    command: mongod --shardsvr --bind_ip 0.0.0.0 --port 27017 --replSet rs0 --dbpath /data/db
    environment:
      MONGO_INITDB_DATABASE: codegard
    ports:
      - "27018:27017"
    volumes:
      - mongodb2:/data/db
      - ./src/mongoDB/mongo-data/mongodb2:/data/db
 

  mongodb3:
    image: mongo
    container_name: mongodb3
    hostname: mongodb3
    command: mongod --shardsvr --bind_ip 0.0.0.0 --port 27017 --replSet rs0 --dbpath /data/db
    environment:
      MONGO_INITDB_DATABASE: codegard
    ports:
      - "27019:27017"
    volumes:
      - mongodb3:/data/db
      - ./src/mongoDB/mongo-data/mongodb3:/data/db
  

volumes:
  cfgsvr: {}
  mongodb1: {}
  mongodb2: {}
  mongodb3: {}
